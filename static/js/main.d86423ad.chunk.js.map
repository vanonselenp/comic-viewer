{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["generateImage","current","next","href","class","src","alt","App","useState","setNext","path","setPath","useEffect","currentDate","window","location","split","localDate","length","url","date","ggurl","fetch","then","response","text","data","htmldoc","DOMParser","parseFromString","s","Set","Array","from","links","filter","m","startsWith","forEach","add","nextComic","values","size","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAOMA,EAAgB,SAACC,EAASC,GAC9B,OACE,mBAAGC,KAAI,uDAAkDD,GAAzD,SACM,qBAAKE,MAAM,cACTC,IAAG,8DAAyDJ,EAAzD,QACHK,IAAI,oDAgDDC,MA3Cf,WAEE,MAAwBC,mBAAS,IAAjC,mBAAON,EAAP,KAAaO,EAAb,KACA,EAAwBD,mBAAS,IAAjC,mBAAOE,EAAP,KAAaC,EAAb,KA+BA,OA7BAC,qBAAU,WACR,IAAMC,EAAcC,OAAOC,SAASZ,KAAKa,MAAM,KAC3CC,EAAYJ,EAAYA,EAAYK,OAAS,GAChC,OAAdD,IAAoBA,EAtBd,YAwBTN,EAAQM,GAER,IAAME,EAAG,UAzBK,4CAyBL,OAxBC,SAACC,GAAD,gEAA6DA,GAwB5CC,CAAMJ,IACjCK,MAAMH,GACHI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,IACMC,GADS,IAAIC,WACIC,gBAAgBH,EAAM,aAEvCI,EAAI,IAAIC,IACdC,MACGC,KAAKN,EAAQO,OACbC,QAAO,SAAAC,GAAC,OAAIA,EAAEjC,KAAKkC,WAAW,sDAC9BC,SAAQ,SAAAF,GAAC,OAAIN,EAAES,IAAIH,EAAEjC,SAExB,IAEMqC,EAFQR,MAAMC,KAAKH,EAAEW,UAAUX,EAAEY,KAAO,GAEtB1B,MAAM,KAC9BP,EAAQ+B,EAAUA,EAAUtB,OAAS,SAExC,IAKD,qBAAKyB,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACG3C,EAAcU,EAAMR,QC1Cd0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.d86423ad.chunk.js","sourcesContent":["import './App.css';\nimport React, { useEffect, useState } from \"react\";\n\nconst date = \"20021104\";\nconst corsProxy = \"https://warm-waters-42495.herokuapp.com/\";\nconst ggurl = (date) => `https://www.girlgeniusonline.com/comic.php?date=${date}`;\n\nconst generateImage = (current, next) => {\n  return (\n    <a href={`http://vanonselenp.github.io/comic-viewer/gg/${next}`}>\n          <img class=\"fit-picture\"\n            src={`http://www.girlgeniusonline.com/ggmain/strips/ggmain${current}.jpg`}\n            alt=\"Grapefruit slice atop a pile of other slices\"/>\n    </a>\n  );\n}\n\nfunction App() {\n  // const [image, setImage] = useState(\"\");\n  const [next, setNext] = useState(\"\");\n  const [path, setPath] = useState(\"\");\n\n  useEffect(() => {\n    const currentDate = window.location.href.split('/');\n    let localDate = currentDate[currentDate.length - 1];\n    if(localDate === \"gg\") localDate = date;\n    \n    setPath(localDate)\n    \n    const url = `${corsProxy}${ggurl(localDate)}`;\n    fetch(url)\n      .then(response => response.text())\n      .then(data => { \n        const parser = new DOMParser();\n        const htmldoc = parser.parseFromString(data, \"text/html\");\n\n        const s = new Set();\n        Array\n          .from(htmldoc.links)\n          .filter(m => m.href.startsWith('http://www.girlgeniusonline.com/comic.php?date='))\n          .forEach(m => s.add(m.href));\n\n        const first = Array.from(s.values())[s.size - 2];\n\n        const nextComic = first.split(\"=\");\n        setNext(nextComic[nextComic.length - 1]);\n      });\n  }, []);\n\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {generateImage(path, next)}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}